import { precacheAndRoute, createHandlerBoundToURL } from 'workbox-precaching';
import { registerRoute, NavigationRoute } from 'workbox-routing';
import { StaleWhileRevalidate } from 'workbox-strategies';

declare const self: ServiceWorkerGlobalScope;

// Precache all the assets generated by your build process
precacheAndRoute(self.__WB_MANIFEST);

// Cache all HTTP requests, including images, using the Stale-While-Revalidate strategy
registerRoute(
  ({ request }) => request.mode === 'navigate' || (request.method === 'GET' && request.destination === 'document') || request.destination === 'image',
  new StaleWhileRevalidate({
    cacheName: 'http-cache',
    plugins: [
      // Optionally, you can add expiration for cached responses
      new workbox.expiration.ExpirationPlugin({
        maxEntries: 100, // Adjust the maximum number of cached responses
        maxAgeSeconds: 30 * 24 * 60 * 60, // 30 Days
      }),
    ],
  })
);

// Cache specific image files with a custom strategy
registerRoute(
  ({ url }) => url.pathname.endsWith('.jpg') || url.pathname.endsWith('.png'),
  new StaleWhileRevalidate({
    cacheName: 'image-cache',
    plugins: [
      new workbox.expiration.ExpirationPlugin({
        maxEntries: 50, // Adjust the maximum number of cached images
        maxAgeSeconds: 7 * 24 * 60 * 60, // 7 Days
      }),
    ],
  })
);

// Cache navigation requests with the NetworkFirst strategy
registerRoute(
  new NavigationRoute(
    createHandlerBoundToURL('/index.html')
  )
);